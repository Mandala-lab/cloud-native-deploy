# Default values for casdoor.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: casbin
  name: casdoor
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# ref: https://casdoor.org/docs/basic/server-installation#via-ini-file
config: |
  appname = casdoor
  httpport = {{ .Values.service.port }}
  runmode = dev
  SessionOn = true
  copyrequestbody = true
  driverName = {{ .Values.database.driver }}
  dataSourceName = {{ include "casdoor.dataSourceName" . }}
  dbName = {{ include "casdoor.dbName" . }}
  redisEndpoint =
  defaultStorageProvider =
  isCloudIntranet = false
  authState = "casdoor"
  socks5Proxy = ""
  verificationCodeTimeout = 10
  initScore = 0
  logPostOnly = true
  origin =
  enableGzip = true
  ldapServerPort = 10389

database:
  # Supports mysql, postgres, cockroachdb, sqlite
  driver: postgres

  user: "postgres"
  password: "postgres"
  host: "postgres-postgresql.postgres.svc.cluster.local"
  # If port is empty, default port will be used.
  # mysql: 3306, postgres: 5432, cockroachdb: 26257
  port: "5432"
  databaseName: casdoor

  sslMode: disable

ldap:
  enabled: false
  service:
    port: 389

imagePullSecrets: []
nameOverride: casdoor
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

probe:
  readiness:
    enabled: true
  liveness:
    enabled: true

service:
  type: NodePort
  port: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 200m
    memory: 200Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# -- Optionally add init containers.
initContainersEnabled: false
initContainers: ""
# initContainers: |
#  - name: ...
#    image: ...

# -- Optionally add extra sidecar containers.
extraContainersEnabled: false
extraContainers: ""
# extraContainers: |
#  - name: ...
#    image: ...
extraVolumeMounts: []
extraVolumes: []

envFromSecret: []
  # - name: ENV_NAME
  #   secretName: test-secret
#   key: key_name

envFromConfigmap: []
  # - name: ENV_NAME
  #   configmapName: test-cm
#   key: key_name

envFrom: []
  # - type: configmap
  #   name: test-cm
  # - type: secret
#   name: test-secret
